{"version":3,"sources":["../server/index.js"],"names":["require","config","express","http","socketio","router","Router","helmet","logger","session","cookieParser","bcrypt","crypto","path","shortid","fs","fileParser","validator","mime","bodyParser","mongoose","_","app","environment","process","env","NODE_ENV","Promise","global","online_DB_uri","local_DB_uri","connect","useMongoClient","err","db","console","log","use","disable","json","urlencoded","extended","PWD","cwd","static","join","api","get","req","res","sendFile","__dirname","originalUrl","writeHead","end","port","normalizePort","PORT","set","server","createServer","io","listen","on","onError","onListening","val","parseInt","isNaN","error","syscall","bind","code","exit","debug","addr","address","module","exports"],"mappings":"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","file":"index.js","sourcesContent":["require(\"babel-polyfill\");\n\nrequire(\"dotenv\").config();\n\nconst express = require(\"express\"),\n  http = require(\"http\"),\n  socketio = require(\"socket.io\"),\n  router = express.Router(),\n  helmet = require(\"helmet\"),\n  logger = require(\"morgan\"),\n  session = require(\"express-session\"),\n  cookieParser = require(\"cookie-parser\"),\n  bcrypt = require(\"bcrypt\"),\n  crypto = require(\"crypto\"),\n  path = require(\"path\"),\n  shortid = require(\"shortid\"),\n  fs = require(\"fs\"),\n  fileParser = require(\"connect-multiparty\")(),\n  validator = require(\"validator\"),\n  mime = require(\"mime\"),\n  bodyParser = require(\"body-parser\"),\n  mongoose = require(\"mongoose\"),\n  _ = require(\"lodash\"),\n  app = express();\n\nconst environment = process.env.NODE_ENV || \"development\";\nmongoose.Promise = global.Promise;\n\nconst online_DB_uri = `mongodb://heroku_8s9nbdfn:4vjc4tbv8oho7jg10tqnv1qd3p@ds113795.mlab.com:13795/heroku_8s9nbdfn`,\n  local_DB_uri = (process.env.NODE_ENV === \"test\") ? \"mongodb://codehakasee:codehakase1@ds121015.mlab.com:21015/phdevsdir-sb\" : `mongodb://localhost:27017/phdevsdir`;\n\nmongoose.connect(\n  environment === \"production\" ? online_DB_uri : local_DB_uri,\n  {\n    useMongoClient: true\n  },\n  (err, db) => {\n    if (err) {\n      console.log(\"Couldn't connect to database\");\n    } else {\n      console.log(`Connected To ${environment} Database`);\n    }\n  }\n);\n\napp.use(logger(\"dev\"));\napp.use(helmet());\napp.disable(\"x-powered-by\");\napp.use(cookieParser());\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\nprocess.env.PWD = process.cwd();\napp.use(express.static(path.join(process.env.PWD, \"public\")));\n\nconst api = express.Router();\nrequire(\"./routes/index.js\")(api);\napp.get('/', (req, res) => {\n  res.sendFile(path.join(__dirname, '../client/index.html'));\n});\napp.get('/dist/*', (req, res) => {\n  res.sendFile(path.join(__dirname, `../client/${req.originalUrl}`));\n});\napp.use(\"/api/v1\", api);\napp.get(\"/isAlive\", (req, res) => {\n  res.writeHead(200, {'Content-Type': 'text/plain'});\n  res.end('Server is Up!\\n');\n});\n\n\n/**\n * Serve API\n * Module dependencies.\n */\n\n/**\n * Get port from environment and store in Express.\n */\n\nconst port = normalizePort(process.env.PORT || \"3000\");\napp.set(\"port\", port);\n\n/**\n * Create HTTP server.\n */\n\nconst server = http.createServer(app);\nconst io = socketio(server);\n/**\n * Listen on provided port, on all network interfaces.\n */\n\nserver.listen(port, function() {\n  console.log(\"listening on port \" + port);\n});\nserver.on(\"error\", onError);\nserver.on(\"listening\", onListening);\n\n/**\n * Normalize a port into a number, string, or false.\n */\n\nfunction normalizePort(val) {\n  const port = parseInt(val, 10);\n\n  if (isNaN(port)) {\n    // named pipe\n    return val;\n  }\n\n  if (port >= 0) {\n    // port number\n    return port;\n  }\n\n  return false;\n}\n\n/**\n * Event listener for HTTP server \"error\" event.\n */\n\nfunction onError(error) {\n  if (error.syscall !== \"listen\") {\n    throw error;\n  }\n\n  const bind = typeof port === \"string\" ? \"Pipe \" + port : \"Port \" + port;\n\n  // handle specific listen errors with friendly messages\n  switch (error.code) {\n    case \"EACCES\":\n      console.error(bind + \" requires elevated privileges\");\n      process.exit(1);\n      break;\n    case \"EADDRINUSE\":\n      console.error(bind + \" is already in use\");\n      process.exit(1);\n      break;\n    default:\n      throw error;\n  }\n}\n\n/**\n * Event listener for HTTP server \"listening\" event.\n */\nconst debug = require(\"debug\");\nfunction onListening() {\n  const addr = server.address();\n  const bind = typeof addr === \"string\" ? \"pipe \" + addr : \"port \" + addr.port;\n  debug(\"Listening on \" + bind);\n}\n\nmodule.exports = app; // tests\n"]}